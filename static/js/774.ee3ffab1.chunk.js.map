{"version":3,"file":"static/js/774.ee3ffab1.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAERC,EAAkB,SAAAC,GACzB,MAA6B,YAAtBH,EAASI,SAAT,UAAqCD,GAArC,iBAAsDA,EAC9D,EAED,OACI,+BACE,wBACKJ,EAAOM,KAAI,gBAAGF,EAAH,EAAGA,GAAIG,EAAP,EAAOA,MAAP,OACR,yBACI,SAAC,KAAD,CAAMC,GAAIL,EAAgBC,GAAKK,MAAO,CAAEC,KAAMT,GAA9C,SACKM,KAFAH,EADD,OAUvB,C,wKCnBYO,EAAOC,EAAAA,GAAAA,KAAH,sJAQJC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,gFAMJI,EAASJ,EAAAA,GAAAA,OAAH,+I,SCpBNK,EAAY,WACvB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eASA,OACE,UAACR,EAAD,CAAMS,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfL,EAAgB,CAAEM,KAAMF,EAAKG,SAASC,MAAMC,MAAMC,SAClDN,EAAKO,OACN,EAGC,WACE,SAACd,EAAD,CAAQe,KAAK,SAAb,UAAsB,SAACjB,EAAD,OACtB,SAACD,EAAD,CACEkB,KAAK,OACLN,KAAK,YAIZ,E,kBCoBD,EAnCe,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOhC,EAAP,KAAeiC,EAAf,KACA,GAAuBf,EAAAA,EAAAA,MAAhBgB,GAAP,eACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMX,EAAOS,EAAaG,IAAI,QAoBhC,OAlBEC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,oGAEQF,GAAa,GAFrB,UAG+BG,EAAAA,EAAAA,IAAed,GAH9C,OAGce,EAHd,OAKQP,EAAUO,EAASC,SAL3B,gDAOQC,QAAQC,IAAR,MAPR,yBAUAP,GAAa,GAVb,6EAFY,sBACNX,GADM,mCAeRmB,EACP,GAAE,CAACnB,KAGJ,iCACI,SAACR,EAAD,IAECkB,IAAa,SAACU,EAAA,EAAD,KAEZ,SAAC9C,EAAA,EAAD,CAAYC,OAAQA,MAG7B,C,+LCtCK8C,EAAW,gCAGjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,UAClBD,EADkB,wBADQ,cACzBN,EADyB,yBAIxBA,EAASU,MAJe,2CAAH,qDAOjBX,EAAc,mCAAG,WAAMY,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,8BACYK,IAFP,cACtBX,EADsB,yBAIrBA,EAASU,MAJY,2CAAH,sDAOdE,EAAe,mCAAG,WAAMhD,GAAN,uFACN2C,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACD1C,IAFO,cACvBoC,EADuB,yBAItBA,EAASU,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMjD,GAAN,uFACH2C,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACD1C,EADC,aADG,cACpBoC,EADoB,yBAInBA,EAASU,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMlD,GAAN,uFACN2C,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACD1C,EADC,aADM,cACvBoC,EADuB,yBAItBA,EAASU,MAJa,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n     const correctPathname = id => {\n    return location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  };\n    \n  return (\n      <>\n        <ul>\n            {movies.map(({ id, title }) => \n                <li key={id}>\n                    <Link to={correctPathname(id)} state={{ from: location }}>\n                        {title}\n                    </Link>\n                </li>\n            )}\n        </ul>\n    </>\n  );\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 16px;\n  border: 0;\n  background-color:transparent;\n`;","import { useSearchParams } from \"react-router-dom\";\nimport { Form, Input, Icon, Button } from \"./SearchBox.styled\";\n\nexport const SearchBox = () => {\n  const [, setSearchParams] = useSearchParams();\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ name: form.elements.query.value.trim() });\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Button type=\"submit\"><Icon /></Button>\n      <Input\n        type=\"text\"\n        name=\"query\"\n      />\n    </Form>\n  );\n};","import { Loader } from \"components/Loader/Loader\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByName } from \"services/API\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams] = useSearchParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const name = searchParams.get(\"name\");\n\n    useEffect(() => {\n         if (!name) return;\n        async function getMovie() {\n            try {\n                setIsLoading(true);\n                const response = await getMovieByName(name);\n                \n                setMovies(response.results);\n            } catch (error) {\n                console.log(error);\n            } \n            finally {\n        setIsLoading(false);\n      }\n        }\n            getMovie();\n    }, [name]);\n\n  return (\n    <>\n        <SearchBox />\n\n        {isLoading && <Loader />}\n         \n          <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '10e9185665d086f70239d7bfb45d8306';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${movieName}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews`\n  );\n  return response.data;\n};"],"names":["MoviesList","movies","location","useLocation","correctPathname","id","pathname","map","title","to","state","from","Form","styled","Input","Icon","HiSearch","Button","SearchBox","useSearchParams","setSearchParams","onSubmit","e","preventDefault","form","currentTarget","name","elements","query","value","trim","reset","type","useState","setMovies","searchParams","isLoading","setIsLoading","get","useEffect","getMovieByName","response","results","console","log","getMovie","Loader","BASE_URL","axios","api_key","getTrendingMovies","data","movieName","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}