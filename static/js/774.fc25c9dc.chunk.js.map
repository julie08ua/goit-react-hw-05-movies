{"version":3,"file":"static/js/774.fc25c9dc.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,+BACE,wBACKF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACI,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMP,GAAzC,SACKI,KAFAD,EADD,OAUvB,C,qJCfYK,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAUA,MAIjB,E,0BCkCD,EAzCe,WAAO,IAAD,EACjB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAI,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAEzCC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAE+BC,EAAAA,EAAAA,IAAeH,GAF9C,OAEcI,EAFd,OAGQV,EAAUU,EAASC,SAH3B,gDAKQT,EAAS,KAAMU,SALvB,0DAFY,sBACNN,GADM,mCAURO,EACP,GAAE,CAACP,IAYN,OACE,iCACM,SAACX,EAAD,CAAWC,MAAOU,EAAMT,SAZT,SAAAiB,GACjBA,EAAEC,iBAEF,IAAMC,EAAaF,EAAEG,OAAOrB,MAC5B,GAAmB,KAAfoB,EACA,OAAOX,EAAgB,CAAC,GAE5BA,EAAgB,CAAEC,KAAMU,GAC7B,IAMQf,IAAS,yBAAG,UAAQA,MAErB,SAACrB,EAAA,EAAD,CAAYC,OAAQA,MAG7B,C,+LC3CKqC,EAAW,gCAGjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,UAClBD,EADkB,wBADQ,cACzBR,EADyB,yBAIxBA,EAASY,MAJe,2CAAH,qDAOjBb,EAAc,mCAAG,WAAMc,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,8BACYK,IAFP,cACtBb,EADsB,yBAIrBA,EAASY,MAJY,2CAAH,sDAOdE,EAAe,mCAAG,WAAMvC,GAAN,uFACNkC,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDjC,IAFO,cACvByB,EADuB,yBAItBA,EAASY,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAMxC,GAAN,uFACHkC,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDjC,EADC,aADG,cACpByB,EADoB,yBAInBA,EAASY,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAMzC,GAAN,uFACNkC,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDjC,EADC,aADM,cACvByB,EADuB,yBAItBA,EAASY,MAJa,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n      <>\n        <ul>\n            {movies.map(({ id, title }) => \n                <li key={id}>\n                    <Link to={`movies/${id}`} state={{ from: location }}>\n                        {title}\n                    </Link>\n                </li>\n            )}\n        </ul>\n    </>\n  );\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </Wrapper>\n  );\n};","import { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByName } from \"services/API\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const name = searchParams.get(\"name\") ?? \"\";\n\n    useEffect(() => {\n         if (!name) return;\n        async function getMovie() {\n            try {\n                const response = await getMovieByName(name);\n                setMovies(response.results);\n            } catch (error) {\n                setError(error.message);\n            } \n        }\n            getMovie();\n    }, [name]);\n\n    const updateSearch = e => {\n        e.preventDefault();\n        \n        const searchName = e.target.value;\n        if (searchName === '') {\n            return setSearchParams({});\n        }\n        setSearchParams({ name: searchName });\n  };\n\n  return (\n    <>\n          <SearchBox value={name} onChange={updateSearch} />\n          \n          {error && <p>Error: {error}</p>}\n\n          <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '10e9185665d086f70239d7bfb45d8306';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${movieName}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews`\n  );\n  return response.data;\n};"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","useState","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","name","get","useEffect","getMovieByName","response","results","message","getMovie","e","preventDefault","searchName","target","BASE_URL","axios","api_key","getTrendingMovies","data","movieName","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}