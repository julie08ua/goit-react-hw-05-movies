{"version":3,"file":"static/js/875.f12ae26f.chunk.js","mappings":"uQA6DA,EAzDkB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACxB,GAAKD,EAAL,CAIF,IACEE,EAOEF,EAPFE,MACAC,EAMEH,EANFG,aACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,SACAC,EAGEN,EAHFM,OACAC,EAEEP,EAFFO,YACAC,EACER,EADFQ,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIR,EAAV,SAAkB,aAClB,4BACI,gBACES,IAAKF,EACLG,IAAG,yCAAoCJ,MAE3C,4BACE,0BAAI,IAAEL,EAAM,QACZ,yBAAG,iBAAeC,MAClB,yBAAG,eAAaC,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,wBACGC,EAAOM,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAMvB,2BACE,yBACE,SAAC,KAAD,CAAMN,GAAG,OAAOO,MAAO,CAAEC,KAAMhB,GAA/B,SAAyC,YAI3C,yBACE,SAAC,KAAD,CAAMQ,GAAG,UAAUO,MAAO,CAAEC,KAAMhB,GAAlC,SAA4C,kBAMhD,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAhDL,CAoDF,E,SClBD,EAnCqB,WAAO,IAAD,IACvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOrB,EAAP,KAAcsB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAEF5B,EAAM,oBAAG0B,EAASX,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiBzC,OAfAc,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,mCAAG,oGAEXN,GAAW,GAFA,UAGYO,EAAAA,EAAAA,IAAgBJ,GAH5B,OAGLK,EAHK,OAIXZ,EAASY,GAJE,gDAMXV,EAAS,KAAMW,SANJ,yBAQXT,GAAW,GARA,4EAAH,qDAWhBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAW,SAACL,EAAA,EAAD,IAEXG,IAAUE,IAAW,yBAAG,UAAQF,MAEjC,SAAC,EAAD,CAAWvB,MAAOA,EAAOC,OAAQA,MAGtC,C,+LCrCKmC,EAAW,gCAGjBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,UAClBD,EADkB,wBADQ,cACzBF,EADyB,yBAIxBA,EAASM,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBD,EADkB,8BACYM,IAFP,cACtBR,EADsB,yBAIrBA,EAASM,MAJY,2CAAH,sDAOdP,EAAe,mCAAG,WAAMlB,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDrB,IAFO,cACvBmB,EADuB,yBAItBA,EAASM,MAJa,2CAAH,sDAOfG,EAAY,mCAAG,WAAM5B,GAAN,uFACHsB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDrB,EADC,aADG,cACpBmB,EADoB,yBAInBA,EAASM,MAJU,2CAAH,sDAOZI,EAAe,mCAAG,WAAM7B,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDrB,EADC,aADM,cACvBmB,EADuB,yBAItBA,EAASM,MAJa,2CAAH,qD","sources":["components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/API.js"],"sourcesContent":["import { Loader } from \"components/Loader/Loader\";\nimport { Suspense } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nconst MovieInfo = ({ movie, goBack }) => {\n    if (!movie) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movie;\n\n  return (\n    <>\n      <Link to={goBack}>Go Back</Link>\n      <div>\n          <img\n            alt={original_title}\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          />\n        <div>\n          <h2>\"{title}\"</h2>\n          <p>Release date: {release_date}</p>\n          <p>User Score: {popularity}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: goBack }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: goBack }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieInfo;","import { Loader } from \"components/Loader/Loader\";\nimport MovieInfo from \"components/MovieInfo/MovieInfo\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"services/API\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const { movieId } = useParams();\n\n    const goBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n      const getMovie = async () => {\n        try {\n            setLoading(true);\n            const response = await getMovieDetails(movieId);\n            setMovie(response);\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setLoading(false);\n        }\n      };\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      {error && !loading && <p>Error: {error}</p>}\n\n      <MovieInfo movie={movie} goBack={goBack} />\n    </>\n  );\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '10e9185665d086f70239d7bfb45d8306';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${movieName}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews`\n  );\n  return response.data;\n};"],"names":["movie","goBack","title","release_date","popularity","overview","genres","poster_path","original_title","to","alt","src","map","genre","name","id","state","from","Suspense","fallback","Loader","useState","setMovie","error","setError","loading","setLoading","location","useLocation","movieId","useParams","useEffect","getMovie","getMovieDetails","response","message","BASE_URL","axios","api_key","getTrendingMovies","data","getMovieByName","movieName","getMovieCast","getMovieReviews"],"sourceRoot":""}